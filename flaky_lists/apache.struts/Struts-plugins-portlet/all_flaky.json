{
    "Directory": "D:\\iDoFT\\dataset\\comprehensive\\14d\\apache.struts\\apache.struts_output\\Struts-plugins-portlet",
    "5813265961493-2c59dd9e-f5aa-4c08-bd0c-f6ae21d405d1": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024264628,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7e0b9178, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@61942c1, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6f63c44f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@408a247c, struts.portlet.mode=[Ljava.lang.String;@62a8fd44, struts.portlet.action=[Ljava.lang.String;@2e6ba49a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8cd4d965",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.025713829,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6e4ea0bd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@56f2bbea, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78f9ed3e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1059754c, struts.portlet.action=[Ljava.lang.String;@b0964b2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8cd4d965",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5817391725792-d95f7aa9-79e6-4b30-b592-bc63da857400": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.025914829,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7de4a01f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2bfeb1ef, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@778ca8ef, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@208e9ef6, struts.portlet.action=[Ljava.lang.String;@78b236a0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7cdfd7d9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.021463924,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b22ec89, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@790132f7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2228db21, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@48b0e701, struts.portlet.mode=[Ljava.lang.String;@241a0c3a, struts.portlet.action=[Ljava.lang.String;@547c04c4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7cdfd7d9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5821887421610-300eb996-a9c8-45b6-97de-2c1d54ea203f": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.025573329,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7de4a01f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2bfeb1ef, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@778ca8ef, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@208e9ef6, struts.portlet.action=[Ljava.lang.String;@78b236a0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7cdfd7d9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5836039223511-2974dc65-807f-47b2-9489-bf626af9c36b": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.028637832,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75a118e6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1d540566, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6014a9ba, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@acdcf71, struts.portlet.mode=[Ljava.lang.String;@77d680e6, struts.portlet.action=[Ljava.lang.String;@4a14c44f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dea62c10",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.028652433,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41522537, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@e9dc4d0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@670d4d38, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@131ff6fa, struts.portlet.action=[Ljava.lang.String;@43b40233}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dea62c10",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5840824658251-7b346d2a-46c8-4488-8192-01b079ecb545": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.027988632,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2b59501e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@476e8796, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4eed2acf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@36fc05ff, struts.portlet.mode=[Ljava.lang.String;@57c47a9e, struts.portlet.action=[Ljava.lang.String;@642505c7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$14ce3e4f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5845441441797-e615d0a2-c8ad-4e9f-ab4a-53f8d03b2802": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.030161634,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2b59501e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@476e8796, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4eed2acf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@36fc05ff, struts.portlet.mode=[Ljava.lang.String;@57c47a9e, struts.portlet.action=[Ljava.lang.String;@642505c7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$14ce3e4f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.040077246,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2caa5d7c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5e671e20, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3eabe84a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@46c3a14d, struts.portlet.action=[Ljava.lang.String;@38fc5554}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$14ce3e4f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5859622475099-22b26cfb-79ca-4070-91eb-4a0bcd994f22": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.030555735,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4674d90, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@60783105, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1292071f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@35d5ac51, struts.portlet.mode=[Ljava.lang.String;@b606cb6, struts.portlet.action=[Ljava.lang.String;@2a3194c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@760487aa, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1526f71, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@49ca94a9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9ab310b, struts.portlet.mode=[Ljava.lang.String;@5b40de43, struts.portlet.action=[Ljava.lang.String;@49fb0bbd}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f73d2542",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.023097326,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4674d90, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@60783105, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1292071f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@35d5ac51, struts.portlet.mode=[Ljava.lang.String;@b606cb6, struts.portlet.action=[Ljava.lang.String;@2a3194c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@760487aa, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1526f71, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@49ca94a9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9ab310b, struts.portlet.mode=[Ljava.lang.String;@5b40de43, struts.portlet.action=[Ljava.lang.String;@49fb0bbd}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f73d2542",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.058451567,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4c6007fb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3e33d73e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6981f8f3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@623dcf2a, struts.portlet.action=[Ljava.lang.String;@2eae4349}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@39de9bda, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@47148f3f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@52226e57, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1200458e, struts.portlet.action=[Ljava.lang.String;@5fcd1c5f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f73d2542",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.033707438,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4c6007fb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3e33d73e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6981f8f3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@623dcf2a, struts.portlet.action=[Ljava.lang.String;@2eae4349}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@39de9bda, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@47148f3f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@52226e57, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1200458e, struts.portlet.action=[Ljava.lang.String;@5fcd1c5f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f73d2542",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5864791906965-9f26c04d-4613-49dd-b99f-87d915265704": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.022717425,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@52e04737, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5bc7e78e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1a4d1ab7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@546e61d5, struts.portlet.mode=[Ljava.lang.String;@4674d90, struts.portlet.action=[Ljava.lang.String;@60783105}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@287ae90c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2e1b374c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3fcee3d9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9c93d16, struts.portlet.mode=[Ljava.lang.String;@760487aa, struts.portlet.action=[Ljava.lang.String;@1526f71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.045723552,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@895416d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@71a06021, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@80bfdc6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6edcad64, struts.portlet.action=[Ljava.lang.String;@4c6007fb}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.039578344,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@52e04737, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5bc7e78e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1a4d1ab7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@546e61d5, struts.portlet.mode=[Ljava.lang.String;@4674d90, struts.portlet.action=[Ljava.lang.String;@60783105}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@287ae90c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2e1b374c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3fcee3d9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9c93d16, struts.portlet.mode=[Ljava.lang.String;@760487aa, struts.portlet.action=[Ljava.lang.String;@1526f71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5869446545244-aa7d39c7-f9d8-40bb-ad65-dc8bfa481a03": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.020049623,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@62db3891, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@61cd1c71, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6724cdec, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6944e53e, struts.portlet.mode=[Ljava.lang.String;@52e04737, struts.portlet.action=[Ljava.lang.String;@5bc7e78e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22c99bdd",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5874980784019-fa8b09bf-ac98-4adb-9726-9cc14091eb7a": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.019850522,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@52e04737, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5bc7e78e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1a4d1ab7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@546e61d5, struts.portlet.mode=[Ljava.lang.String;@4674d90, struts.portlet.action=[Ljava.lang.String;@60783105}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@287ae90c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2e1b374c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3fcee3d9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9c93d16, struts.portlet.mode=[Ljava.lang.String;@760487aa, struts.portlet.action=[Ljava.lang.String;@1526f71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.046360652,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@895416d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@71a06021, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@80bfdc6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6edcad64, struts.portlet.action=[Ljava.lang.String;@4c6007fb}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@67cffead, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@214beff9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1ff15a50, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@217c23ce, struts.portlet.action=[Ljava.lang.String;@39de9bda}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.015482418,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@895416d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@71a06021, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@80bfdc6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6edcad64, struts.portlet.action=[Ljava.lang.String;@4c6007fb}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@67cffead, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@214beff9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1ff15a50, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@217c23ce, struts.portlet.action=[Ljava.lang.String;@39de9bda}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.020629623,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@52e04737, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5bc7e78e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1a4d1ab7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@546e61d5, struts.portlet.mode=[Ljava.lang.String;@4674d90, struts.portlet.action=[Ljava.lang.String;@60783105}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@287ae90c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2e1b374c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3fcee3d9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@9c93d16, struts.portlet.mode=[Ljava.lang.String;@760487aa, struts.portlet.action=[Ljava.lang.String;@1526f71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$127ce5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5878438850038-5185800c-96f7-4b89-8f08-e34b2ea5de8a": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.02627863,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@cd7f1ae, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@60e949e1, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3c4bc9fc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@680362a, struts.portlet.mode=[Ljava.lang.String;@3569edd5, struts.portlet.action=[Ljava.lang.String;@1f651cd8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c2c5aa26",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.040738646,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@794b435f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@38f2e97e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@779dfe55, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@323659f8, struts.portlet.action=[Ljava.lang.String;@1144a55a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c2c5aa26",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5882548604494-15fdea0f-9577-472d-aba3-990fa39f8ddc": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.024822128,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4e6d7365, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7c0da600, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d4602a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@21ae6e73, struts.portlet.mode=[Ljava.lang.String;@47dd778, struts.portlet.action=[Ljava.lang.String;@15515c51}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b7d8edf5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5893037220372-e5a3f2a0-33e1-4451-a64e-0d5d0157cea3": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.020087923,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@70721c12, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@769bd849, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@101ca8da, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@20a967fe, struts.portlet.mode=[Ljava.lang.String;@405b6d75, struts.portlet.action=[Ljava.lang.String;@682abca7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@57a6a933, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5b59, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1934ad7c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b27b210, struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2176bea5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.028674433,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@70721c12, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@769bd849, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@101ca8da, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@20a967fe, struts.portlet.mode=[Ljava.lang.String;@405b6d75, struts.portlet.action=[Ljava.lang.String;@682abca7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@57a6a933, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5b59, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1934ad7c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b27b210, struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2176bea5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.023964427,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@a9c5b75, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@dd4aec3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4dac121d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@568750b7, struts.portlet.action=[Ljava.lang.String;@3e28fee1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@17fede14, struts.portlet.action=[Ljava.lang.String;@712ac7e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2176bea5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.028580432,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@a9c5b75, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@dd4aec3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4dac121d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@568750b7, struts.portlet.action=[Ljava.lang.String;@3e28fee1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@17fede14, struts.portlet.action=[Ljava.lang.String;@712ac7e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2176bea5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5900122600190-feb1a328-39f8-4941-a916-64d421c18d3b": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.02605613,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@60e9df3c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@907f2b7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@435ce306, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@537b32ef, struts.portlet.mode=[Ljava.lang.String;@7dc51783, struts.portlet.action=[Ljava.lang.String;@4b61d0c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.024448627,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4fa06f52, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@602c4656, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5ffc5491, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@705202d1, struts.portlet.action=[Ljava.lang.String;@3c443976}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5903826584980-66fa09ad-c501-4feb-8e01-40c65f377888": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.029895234,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@38fc5554, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5e8cda75, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3f049056, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@64968732, struts.portlet.mode=[Ljava.lang.String;@3e1a3801, struts.portlet.action=[Ljava.lang.String;@6fd12c5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.024931428,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@642505c7, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4339e0de, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@153cd6bb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@61d84e08, struts.portlet.action=[Ljava.lang.String;@2d9f64c9}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5910940778025-fc1f65b7-27ea-48d3-94f2-a7bb6198b379": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.023211327,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@101ca8da, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@20a967fe, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@405b6d75, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@682abca7, struts.portlet.mode=[Ljava.lang.String;@1d858300, struts.portlet.action=[Ljava.lang.String;@76f881d9}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@57a6a933, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5b59, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1934ad7c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b27b210, struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$517bc207",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024173027,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@101ca8da, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@20a967fe, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@405b6d75, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@682abca7, struts.portlet.mode=[Ljava.lang.String;@1d858300, struts.portlet.action=[Ljava.lang.String;@76f881d9}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@57a6a933, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5b59, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1934ad7c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b27b210, struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$517bc207",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.022096325,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4dac121d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@568750b7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3e28fee1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@16a2ed51, struts.portlet.action=[Ljava.lang.String;@3b332962}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@17fede14, struts.portlet.action=[Ljava.lang.String;@712ac7e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$517bc207",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.028782333,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4dac121d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@568750b7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3e28fee1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@16a2ed51, struts.portlet.action=[Ljava.lang.String;@3b332962}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@17fede14, struts.portlet.action=[Ljava.lang.String;@712ac7e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$517bc207",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5916132821593-f94c5636-a101-45c5-933e-68e839ade428": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016964619,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@70721c12, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@769bd849, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@101ca8da, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@20a967fe, struts.portlet.mode=[Ljava.lang.String;@405b6d75, struts.portlet.action=[Ljava.lang.String;@682abca7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$60c40551",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.016629719,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@a9c5b75, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@dd4aec3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4dac121d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@568750b7, struts.portlet.action=[Ljava.lang.String;@3e28fee1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$60c40551",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5919467572261-952f86cc-e59f-4e66-9c58-6ed832a30984": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.113712429,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.105614319,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41925502, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@13e3c1c7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5316e95f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5922903577543-f207f5bc-842d-40b3-a04d-3879e0c0f534": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024847528,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6482eef, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1fcf9739, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b498842, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1cb37ee4, struts.portlet.mode=[Ljava.lang.String;@5bcb04cb, struts.portlet.action=[Ljava.lang.String;@385e36d4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.088835101,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6df3e44c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7ce7e83c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4a05d8ae, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@238acd0b, struts.portlet.action=[Ljava.lang.String;@23811a09}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5927802481375-463c7a59-2773-4b46-b8c5-27b755b65296": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.074578184,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@507d20bb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@9fec931, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5cbd159f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@557286ad, struts.portlet.action=[Ljava.lang.String;@b10a26d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$5b5f9cc2",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5931285505208-92fd0df6-6aaa-4081-9ddb-e9574d652d28": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.080493291,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2bef51f2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@650eab8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@30f5a68a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1e1d3956, struts.portlet.mode=[Ljava.lang.String;@4f2c9ba6, struts.portlet.action=[Ljava.lang.String;@4e28bdd1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.164494886,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3e5499cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@67ab1c47, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b78a709, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4b672daa, struts.portlet.action=[Ljava.lang.String;@ea9b7c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5934973356671-76d19b46-de38-40ff-ad7b-e15a80e86d3f": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.045498851,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@618c5d94, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b40ceb, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@13c3c1e1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1d8062d2, struts.portlet.mode=[Ljava.lang.String;@1e63ec0b, struts.portlet.action=[Ljava.lang.String;@3b956878}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$65de6fdb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.13234935,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@75390459, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7756c3cd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2313052e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@45efc20d, struts.portlet.action=[Ljava.lang.String;@3e5499cc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$65de6fdb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5938549447406-2a56917c-f851-48e6-9c61-82d140c59f4b": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.153823274,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@75390459, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7756c3cd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2313052e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@45efc20d, struts.portlet.action=[Ljava.lang.String;@3e5499cc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$65de6fdb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5945689755161-18307f4e-0faa-49d7-8115-35e6a7ee5dad": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.019799322,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6dd1c3ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@22a6e998, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@55e42449, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@e57e5d6, struts.portlet.mode=[Ljava.lang.String;@6dfa915a, struts.portlet.action=[Ljava.lang.String;@78054f54}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@618ff5c2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@16727bf0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f84acf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@291373d3, struts.portlet.mode=[Ljava.lang.String;@372ca2d6, struts.portlet.action=[Ljava.lang.String;@3204e238}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.020023822,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6dd1c3ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@22a6e998, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@55e42449, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@e57e5d6, struts.portlet.mode=[Ljava.lang.String;@6dfa915a, struts.portlet.action=[Ljava.lang.String;@78054f54}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@618ff5c2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@16727bf0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f84acf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@291373d3, struts.portlet.mode=[Ljava.lang.String;@372ca2d6, struts.portlet.action=[Ljava.lang.String;@3204e238}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.041241646,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6eb17ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@730f9695, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@277bf091, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1981d861, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@118ffcfd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53f4c1e6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74174a23, struts.portlet.action=[Ljava.lang.String;@6342d610}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.019303422,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6eb17ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@730f9695, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@277bf091, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1981d861, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@118ffcfd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53f4c1e6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74174a23, struts.portlet.action=[Ljava.lang.String;@6342d610}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5950696547106-15ca00a1-e500-471a-9560-81e927a8b580": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.029360334,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@46963479, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7e74a380, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6dd1c3ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@22a6e998, struts.portlet.mode=[Ljava.lang.String;@55e42449, struts.portlet.action=[Ljava.lang.String;@e57e5d6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75d982d3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4f89331f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@618ff5c2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@16727bf0, struts.portlet.mode=[Ljava.lang.String;@2f84acf7, struts.portlet.action=[Ljava.lang.String;@291373d3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$19fc45ae",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.032360337,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@46963479, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7e74a380, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6dd1c3ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@22a6e998, struts.portlet.mode=[Ljava.lang.String;@55e42449, struts.portlet.action=[Ljava.lang.String;@e57e5d6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75d982d3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4f89331f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@618ff5c2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@16727bf0, struts.portlet.mode=[Ljava.lang.String;@2f84acf7, struts.portlet.action=[Ljava.lang.String;@291373d3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$19fc45ae",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.057170364,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5d21202d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@14b789f6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eb17ec8, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@730f9695, struts.portlet.action=[Ljava.lang.String;@277bf091}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@588f63c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5a6fa56e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1981d861, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@118ffcfd, struts.portlet.action=[Ljava.lang.String;@53f4c1e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$19fc45ae",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.021044424,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5d21202d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@14b789f6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eb17ec8, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@730f9695, struts.portlet.action=[Ljava.lang.String;@277bf091}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@588f63c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5a6fa56e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1981d861, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@118ffcfd, struts.portlet.action=[Ljava.lang.String;@53f4c1e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$19fc45ae",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5954249151111-0853f200-8ca0-4866-baf6-127a169234ba": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.020305223,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3ece1e79, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@ab20d7c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@474fae39, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4f4c789f, struts.portlet.mode=[Ljava.lang.String;@13f9ad9, struts.portlet.action=[Ljava.lang.String;@1b7cae6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1d247525, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@35ee466f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@32e652b6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4ba02375, struts.portlet.mode=[Ljava.lang.String;@7593ea79, struts.portlet.action=[Ljava.lang.String;@3289079a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f99a77ef",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016184318,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3ece1e79, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@ab20d7c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@474fae39, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4f4c789f, struts.portlet.mode=[Ljava.lang.String;@13f9ad9, struts.portlet.action=[Ljava.lang.String;@1b7cae6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1d247525, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@35ee466f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@32e652b6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4ba02375, struts.portlet.mode=[Ljava.lang.String;@7593ea79, struts.portlet.action=[Ljava.lang.String;@3289079a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f99a77ef",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.016485719,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6c65860d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2d000e80, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7cf283e1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@26a2f7f9, struts.portlet.action=[Ljava.lang.String;@38eb2c50}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6add8e3f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@58a2b917, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@48904d5a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@12bbfc54, struts.portlet.action=[Ljava.lang.String;@1491344a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f99a77ef",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.096173608,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6c65860d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2d000e80, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7cf283e1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@26a2f7f9, struts.portlet.action=[Ljava.lang.String;@38eb2c50}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6add8e3f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@58a2b917, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@48904d5a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@12bbfc54, struts.portlet.action=[Ljava.lang.String;@1491344a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f99a77ef",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5959484559511-d9ac8a13-a247-4e19-b00d-15186fb16594": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.028529432,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@56ac5c80, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@69e49a81, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1023150a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3ece1e79, struts.portlet.mode=[Ljava.lang.String;@ab20d7c, struts.portlet.action=[Ljava.lang.String;@474fae39}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@35f3a22c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1a0c5e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@123d7057, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1d247525, struts.portlet.mode=[Ljava.lang.String;@35ee466f, struts.portlet.action=[Ljava.lang.String;@32e652b6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$74381a0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.025900629,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2c2db130, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@327c7bea, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@348d18a3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1bd0b0e5, struts.portlet.action=[Ljava.lang.String;@dc7b462}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@18f55704, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@67cefd84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5fbe155, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6add8e3f, struts.portlet.action=[Ljava.lang.String;@58a2b917}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$74381a0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.086728398,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2c2db130, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@327c7bea, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@348d18a3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1bd0b0e5, struts.portlet.action=[Ljava.lang.String;@dc7b462}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@18f55704, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@67cefd84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5fbe155, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6add8e3f, struts.portlet.action=[Ljava.lang.String;@58a2b917}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$74381a0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024794828,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@56ac5c80, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@69e49a81, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1023150a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3ece1e79, struts.portlet.mode=[Ljava.lang.String;@ab20d7c, struts.portlet.action=[Ljava.lang.String;@474fae39}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@35f3a22c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1a0c5e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@123d7057, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1d247525, struts.portlet.mode=[Ljava.lang.String;@35ee466f, struts.portlet.action=[Ljava.lang.String;@32e652b6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$74381a0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5966469240379-a33db85f-9a17-4fc4-8588-f2ecf36cf295": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.019158821,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbc408c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@991cbde, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78d71df1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@456bcb74, struts.portlet.mode=[Ljava.lang.String;@a9c5b75, struts.portlet.action=[Ljava.lang.String;@dd4aec3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7cd3754f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.018502621,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@76536c53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@38d08cb5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@363c32cc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f3f0ae, struts.portlet.action=[Ljava.lang.String;@6baf25d7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7cd3754f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5969830682565-c7e747bc-7e91-4c68-a0ed-23564b1083f1": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.015565717,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@399ca607, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@44114b9f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@76bf1bb8, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2a235b8e, struts.portlet.mode=[Ljava.lang.String;@76536c53, struts.portlet.action=[Ljava.lang.String;@38d08cb5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.01718322,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@10b687f2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@55f4887d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@26837057, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2dbc408c, struts.portlet.action=[Ljava.lang.String;@991cbde}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5975339119066-e016c914-7b54-464f-bebf-ed9d035175a7": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.017595719,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4373f66f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@399ca607, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@44114b9f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@76bf1bb8, struts.portlet.mode=[Ljava.lang.String;@2a235b8e, struts.portlet.action=[Ljava.lang.String;@76536c53}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ff64c864",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.01834592,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2d74c81b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@10b687f2, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@55f4887d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@26837057, struts.portlet.action=[Ljava.lang.String;@2dbc408c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ff64c864",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5978837332604-0a5b4877-bb06-42c3-9226-a559cc085c1d": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.038568144,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@12bfd80d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@41925502, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@13e3c1c7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5316e95f, struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@773cbf4f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6b54655f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@665e9289, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7d3430a7, struts.portlet.mode=[Ljava.lang.String;@6f603e89, struts.portlet.action=[Ljava.lang.String;@2756c0a7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.060761868,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@12bfd80d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@41925502, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@13e3c1c7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5316e95f, struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@773cbf4f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6b54655f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@665e9289, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7d3430a7, struts.portlet.mode=[Ljava.lang.String;@6f603e89, struts.portlet.action=[Ljava.lang.String;@2756c0a7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.184684008,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@60641ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@75f65e45, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eeade6c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@328cf0e1, struts.portlet.action=[Ljava.lang.String;@63b1d4fa}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@346a361, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@107ed6fc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1643d68f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@186978a6, struts.portlet.action=[Ljava.lang.String;@2e029d61}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.048394254,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@60641ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@75f65e45, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eeade6c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@328cf0e1, struts.portlet.action=[Ljava.lang.String;@63b1d4fa}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@346a361, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@107ed6fc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1643d68f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@186978a6, struts.portlet.action=[Ljava.lang.String;@2e029d61}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5982527469356-05b1aefd-ac7a-487c-b92d-f8f4a9fe491c": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.058194265,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75c9e76b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7446d8d5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5c3b6c6e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4fbda97b, struts.portlet.mode=[Ljava.lang.String;@75f5fd58, struts.portlet.action=[Ljava.lang.String;@37b70343}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2611b9a3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@54227100, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6b5894c8, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1433046b, struts.portlet.mode=[Ljava.lang.String;@3f446bef, struts.portlet.action=[Ljava.lang.String;@7829b776}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$43f101c4",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.15997628,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5d2a4eed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@57459491, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3f0846c6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4da602fc, struts.portlet.action=[Ljava.lang.String;@2a8d39c4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@74e47444, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@9bd0fa6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@59d2103b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@39dcf4b0, struts.portlet.action=[Ljava.lang.String;@6e4de19b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$43f101c4",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.042465747,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5d2a4eed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@57459491, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3f0846c6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4da602fc, struts.portlet.action=[Ljava.lang.String;@2a8d39c4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@74e47444, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@9bd0fa6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@59d2103b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@39dcf4b0, struts.portlet.action=[Ljava.lang.String;@6e4de19b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$43f101c4",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.055283962,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75c9e76b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7446d8d5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5c3b6c6e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4fbda97b, struts.portlet.mode=[Ljava.lang.String;@75f5fd58, struts.portlet.action=[Ljava.lang.String;@37b70343}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2611b9a3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@54227100, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6b5894c8, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1433046b, struts.portlet.mode=[Ljava.lang.String;@3f446bef, struts.portlet.action=[Ljava.lang.String;@7829b776}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$43f101c4",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "5989626195441-87f3bb5d-4f93-4995-a8f8-bc3f33ce4d26": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.147590366,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@25e2a451, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1698ee84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@10c626be, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@18230356, struts.portlet.mode=[Ljava.lang.String;@d8305c2, struts.portlet.action=[Ljava.lang.String;@56bca85b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.087523298,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a62c01e, struts.portlet.action=[Ljava.lang.String;@7a8fa663}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6014563800465-d2b9041c-c529-4a83-a08e-4b21b1d27aec": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.022034625,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6f3f0ae, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6baf25d7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@57a6a933, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5b5b59, struts.portlet.mode=[Ljava.lang.String;@1934ad7c, struts.portlet.action=[Ljava.lang.String;@b27b210}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.117570332,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6f3f0ae, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6baf25d7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@57a6a933, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5b5b59, struts.portlet.mode=[Ljava.lang.String;@1934ad7c, struts.portlet.action=[Ljava.lang.String;@b27b210}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.083497793,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41925502, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@13e3c1c7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5316e95f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@68c9e023, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1624775, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1e7f19b4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@235b4cb8, struts.portlet.action=[Ljava.lang.String;@4346808}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.023945326,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41925502, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@13e3c1c7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5316e95f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@68c9e023, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1624775, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1e7f19b4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@235b4cb8, struts.portlet.action=[Ljava.lang.String;@4346808}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6021737977519-ebd3f0da-d394-447d-b7a4-c85e73b62328": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.030581335,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@290aeb20, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@73ad4ecc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@69da0b12, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3910fe11, struts.portlet.mode=[Ljava.lang.String;@460510aa, struts.portlet.action=[Ljava.lang.String;@351e414e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@66fb45e5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6cbe68e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6f5e16cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@750a04ec, struts.portlet.mode=[Ljava.lang.String;@49e2b3c5, struts.portlet.action=[Ljava.lang.String;@56846330}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4e06c21",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.096247308,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@290aeb20, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@73ad4ecc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@69da0b12, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3910fe11, struts.portlet.mode=[Ljava.lang.String;@460510aa, struts.portlet.action=[Ljava.lang.String;@351e414e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@66fb45e5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6cbe68e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6f5e16cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@750a04ec, struts.portlet.mode=[Ljava.lang.String;@49e2b3c5, struts.portlet.action=[Ljava.lang.String;@56846330}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4e06c21",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.057972565,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7ea08277, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6401d0a0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4ce14f05, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@71dfcf21, struts.portlet.action=[Ljava.lang.String;@b965857}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@29f38091, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@161dd92a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77c3c037, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4e06c21",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.024174827,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7ea08277, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6401d0a0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4ce14f05, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@71dfcf21, struts.portlet.action=[Ljava.lang.String;@b965857}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@29f38091, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@161dd92a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77c3c037, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4e06c21",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6035603392876-49afc382-ec33-4230-aa10-99a80a63fea4": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.085574996,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1473b8c0, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5c0057, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@749f539e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@37095ded, struts.portlet.mode=[Ljava.lang.String;@2eb79cbe, struts.portlet.action=[Ljava.lang.String;@2ca6546f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@42e22a53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@57adfab0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1949309d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5af97169, struts.portlet.mode=[Ljava.lang.String;@99a78d7, struts.portlet.action=[Ljava.lang.String;@31da6b2e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$d0802a75",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.025288128,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1473b8c0, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5c0057, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@749f539e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@37095ded, struts.portlet.mode=[Ljava.lang.String;@2eb79cbe, struts.portlet.action=[Ljava.lang.String;@2ca6546f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@42e22a53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@57adfab0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1949309d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5af97169, struts.portlet.mode=[Ljava.lang.String;@99a78d7, struts.portlet.action=[Ljava.lang.String;@31da6b2e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$d0802a75",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.028733333,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@383790cf, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@74971ed9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@131fcb6f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@ccd1bc3, struts.portlet.action=[Ljava.lang.String;@878537d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@706cb08, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4e25147a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6b68cb27, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@675ffd1d, struts.portlet.action=[Ljava.lang.String;@56303475}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$d0802a75",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.037443042,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@383790cf, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@74971ed9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@131fcb6f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@ccd1bc3, struts.portlet.action=[Ljava.lang.String;@878537d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@706cb08, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4e25147a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6b68cb27, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@675ffd1d, struts.portlet.action=[Ljava.lang.String;@56303475}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$d0802a75",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6039854326243-3178d38e-7548-4bf0-b717-24316131e80f": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.08055699,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@10ec523c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@53dfacba, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@79767781, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@27aae97b, struts.portlet.mode=[Ljava.lang.String;@4c9e38, struts.portlet.action=[Ljava.lang.String;@5d1e09bc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$625cc462",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6047157717231-7022bb95-b060-485e-b587-fd4fec52db13": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.07180818,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3a62c01e, struts.portlet.mode=[Ljava.lang.String;@7a8fa663, struts.portlet.action=[Ljava.lang.String;@5ce33a58}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$431f542c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.139837957,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4c4d27c8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6821ea29, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@338494fa, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@fd8294b, struts.portlet.action=[Ljava.lang.String;@5974109}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$431f542c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6050943299273-9182fba8-6d11-4d8d-9209-015f7b2e6eb0": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.149213867,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@56a4479a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@62163b39, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@20a8a64e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4c4d27c8, struts.portlet.action=[Ljava.lang.String;@6821ea29}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1ce09e01",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.066846475,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2ece4966, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1dd0e7c4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7894f09b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3d484181, struts.portlet.mode=[Ljava.lang.String;@6111ba37, struts.portlet.action=[Ljava.lang.String;@7be58f16}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1ce09e01",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6061428678320-c413c66a-3333-4821-86c0-eb759a35e709": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.021545324,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3910fe11, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@460510aa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@351e414e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6eb82908, struts.portlet.mode=[Ljava.lang.String;@4a8df3e2, struts.portlet.action=[Ljava.lang.String;@3d98d138}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@778db7c5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@681e144, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2875b016, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@72ee5d84, struts.portlet.mode=[Ljava.lang.String;@68c7ef83, struts.portlet.action=[Ljava.lang.String;@6145b81e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.066239074,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3910fe11, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@460510aa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@351e414e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6eb82908, struts.portlet.mode=[Ljava.lang.String;@4a8df3e2, struts.portlet.action=[Ljava.lang.String;@3d98d138}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@778db7c5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@681e144, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2875b016, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@72ee5d84, struts.portlet.mode=[Ljava.lang.String;@68c7ef83, struts.portlet.action=[Ljava.lang.String;@6145b81e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.021536625,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3fd2322d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@56ac5c80, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@69e49a81, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1023150a, struts.portlet.action=[Ljava.lang.String;@3ece1e79}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@18ac53e8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4ca8dbfa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7063686f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@c3177d5, struts.portlet.action=[Ljava.lang.String;@76f856a8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.018630221,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3fd2322d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@56ac5c80, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@69e49a81, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1023150a, struts.portlet.action=[Ljava.lang.String;@3ece1e79}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@18ac53e8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4ca8dbfa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7063686f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@c3177d5, struts.portlet.action=[Ljava.lang.String;@76f856a8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6064955266269-e93d3215-d90f-47e4-a6d3-77fae052a4b3": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.018564621,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@acdcf71, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77d680e6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4a14c44f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@f08fdce, struts.portlet.mode=[Ljava.lang.String;@6bda1d19, struts.portlet.action=[Ljava.lang.String;@28c86134}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b074837f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.024469228,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@71f0b72e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7a34f66a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f508f3c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3ed03652, struts.portlet.action=[Ljava.lang.String;@4aedaf61}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b074837f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6069548878613-4612c52c-11b1-4fce-ad1b-3965bb59cca4": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.03541694,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@11b377c5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7bca6fac, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5c60b0a0, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@7a2b1eb4, struts.portlet.action=[Ljava.lang.String;@702c436b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bb92df93",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6076270420636-1a73b64d-ebfc-409d-8976-9d45395f0365": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.123380238,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@207b8649, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@65b3a85a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@34997338, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5af3a0f, struts.portlet.mode=[Ljava.lang.String;@19ae6bb, struts.portlet.action=[Ljava.lang.String;@10993713}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@252744a1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@10e5bf9c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@68c9e023, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1624775, struts.portlet.mode=[Ljava.lang.String;@1e7f19b4, struts.portlet.action=[Ljava.lang.String;@235b4cb8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.015373617,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@207b8649, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@65b3a85a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@34997338, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5af3a0f, struts.portlet.mode=[Ljava.lang.String;@19ae6bb, struts.portlet.action=[Ljava.lang.String;@10993713}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@252744a1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@10e5bf9c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@68c9e023, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1624775, struts.portlet.mode=[Ljava.lang.String;@1e7f19b4, struts.portlet.action=[Ljava.lang.String;@235b4cb8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.016237418,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@654d8173, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@56c9bbd8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@630cb4a4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@636e8cc, struts.portlet.action=[Ljava.lang.String;@f79a760}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@363c32cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6f3f0ae, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6baf25d7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@57a6a933, struts.portlet.action=[Ljava.lang.String;@5b5b59}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.066389474,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@654d8173, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@56c9bbd8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@630cb4a4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@636e8cc, struts.portlet.action=[Ljava.lang.String;@f79a760}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@363c32cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6f3f0ae, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6baf25d7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@57a6a933, struts.portlet.action=[Ljava.lang.String;@5b5b59}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6080044998560-3f48c7f0-9fae-4d4c-9dcd-e9f7a5f4954c": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.105271518,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@79da1ec0, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@19fb8826, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@192d74fb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4bef0fe3, struts.portlet.action=[Ljava.lang.String;@62ea3440}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8be15e6d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.138379555,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@58fe0499, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@686449f9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@665df3c6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@52045dbe, struts.portlet.mode=[Ljava.lang.String;@674658f7, struts.portlet.action=[Ljava.lang.String;@5c8eee0f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8be15e6d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6090478179630-469e5554-5616-46ad-8fcb-3cb23598e498": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.154071772,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@25e2a451, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1698ee84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@10c626be, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@18230356, struts.portlet.mode=[Ljava.lang.String;@d8305c2, struts.portlet.action=[Ljava.lang.String;@56bca85b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@d5ae57e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@68759011, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7e242b4d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@305f031, struts.portlet.mode=[Ljava.lang.String;@592e843a, struts.portlet.action=[Ljava.lang.String;@1d1f7216}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.032842937,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@25e2a451, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1698ee84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@10c626be, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@18230356, struts.portlet.mode=[Ljava.lang.String;@d8305c2, struts.portlet.action=[Ljava.lang.String;@56bca85b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@d5ae57e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@68759011, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7e242b4d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@305f031, struts.portlet.mode=[Ljava.lang.String;@592e843a, struts.portlet.action=[Ljava.lang.String;@1d1f7216}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.036754941,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a62c01e, struts.portlet.action=[Ljava.lang.String;@7a8fa663}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6f0ca692, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2c104774, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2cb3d0f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4e517165, struts.portlet.action=[Ljava.lang.String;@44e3760b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.113396926,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a62c01e, struts.portlet.action=[Ljava.lang.String;@7a8fa663}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6f0ca692, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2c104774, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2cb3d0f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4e517165, struts.portlet.action=[Ljava.lang.String;@44e3760b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ee6d0704",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6094586155823-a0297ba5-513d-4fed-b5b5-f420ff1bee93": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.119536734,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75f65e45, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6eeade6c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4a891c97, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@63b1d4fa, struts.portlet.mode=[Ljava.lang.String;@42e3ede4, struts.portlet.action=[Ljava.lang.String;@201b6b6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@267f474e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7a7471ce, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@28276e50, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@62e70ea3, struts.portlet.mode=[Ljava.lang.String;@3efe7086, struts.portlet.action=[Ljava.lang.String;@675d8c96}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$da741eb9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.094364105,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7be58f16, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@242aa8d9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b11a194, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@37bd68c3, struts.portlet.action=[Ljava.lang.String;@60f7cc1d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6c8bca63, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2364305a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@470a696f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1bc715b8, struts.portlet.action=[Ljava.lang.String;@292d1c71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$da741eb9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.066451574,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7be58f16, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@242aa8d9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b11a194, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@37bd68c3, struts.portlet.action=[Ljava.lang.String;@60f7cc1d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6c8bca63, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2364305a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@470a696f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@1bc715b8, struts.portlet.action=[Ljava.lang.String;@292d1c71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$da741eb9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.060775368,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75f65e45, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6eeade6c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4a891c97, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@63b1d4fa, struts.portlet.mode=[Ljava.lang.String;@42e3ede4, struts.portlet.action=[Ljava.lang.String;@201b6b6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@267f474e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7a7471ce, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@28276e50, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@62e70ea3, struts.portlet.mode=[Ljava.lang.String;@3efe7086, struts.portlet.action=[Ljava.lang.String;@675d8c96}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$da741eb9",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6098042477487-38be55e3-03fb-484a-ab80-4edf4a528442": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.066685375,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@67440de6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@889d9e8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5246a3b3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4682eba5, struts.portlet.mode=[Ljava.lang.String;@6d9fb2d1, struts.portlet.action=[Ljava.lang.String;@61fafb74}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64e3b85f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.034418739,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2fc2a205, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2881ad47, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2bef09c0, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@62ce72ff, struts.portlet.action=[Ljava.lang.String;@58a63629}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64e3b85f",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6102778462181-8275005c-d904-44f5-ab7f-85754c8cf680": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.034896239,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5ff2e84b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@74abbb, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@64a4dd8d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2dddc1b9, struts.portlet.action=[Ljava.lang.String;@65a5d4f9}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6164c92e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.065490674,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3f29e26, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1f6d27cc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4393593c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@60737b23, struts.portlet.mode=[Ljava.lang.String;@4d2a1da3, struts.portlet.action=[Ljava.lang.String;@252f626c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6164c92e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6106438346870-e2085daf-fda7-46e6-89d8-48998db68875": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.021566924,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@68b366e2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2d74c81b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@10b687f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@55f4887d, struts.portlet.mode=[Ljava.lang.String;@26837057, struts.portlet.action=[Ljava.lang.String;@2dbc408c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@76bf1bb8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2a235b8e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@76536c53, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@38d08cb5, struts.portlet.mode=[Ljava.lang.String;@363c32cc, struts.portlet.action=[Ljava.lang.String;@6f3f0ae}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd0707db",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.021873225,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@68b366e2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2d74c81b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@10b687f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@55f4887d, struts.portlet.mode=[Ljava.lang.String;@26837057, struts.portlet.action=[Ljava.lang.String;@2dbc408c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@76bf1bb8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2a235b8e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@76536c53, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@38d08cb5, struts.portlet.mode=[Ljava.lang.String;@363c32cc, struts.portlet.action=[Ljava.lang.String;@6f3f0ae}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd0707db",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.022737825,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2582b0ef, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@70721c12, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@769bd849, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@101ca8da, struts.portlet.action=[Ljava.lang.String;@20a967fe}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@29f38091, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@161dd92a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77c3c037, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd0707db",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.025743729,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2582b0ef, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@70721c12, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@769bd849, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@101ca8da, struts.portlet.action=[Ljava.lang.String;@20a967fe}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@29f38091, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@161dd92a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77c3c037, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd0707db",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6109981727829-4588b5a8-d486-4db3-a507-fc97d9ed0429": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.015993018,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@76bf1bb8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2a235b8e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@76536c53, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@38d08cb5, struts.portlet.mode=[Ljava.lang.String;@363c32cc, struts.portlet.action=[Ljava.lang.String;@6f3f0ae}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$9bf4b9a5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.01800312,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@26837057, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@2dbc408c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@991cbde, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@78d71df1, struts.portlet.action=[Ljava.lang.String;@456bcb74}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$9bf4b9a5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6120331361689-a528426b-a3f3-47db-ad67-52ee1f6cf81c": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.019616122,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@dd4aec3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4dac121d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@568750b7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3e28fee1, struts.portlet.mode=[Ljava.lang.String;@16a2ed51, struts.portlet.action=[Ljava.lang.String;@3b332962}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22bcd313",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.022777426,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@50a13c2f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@610d28b8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53c99b09, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2539cd1c, struts.portlet.action=[Ljava.lang.String;@7c20cdd0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22bcd313",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6125824629810-1ff87f2d-49fb-4226-bfc8-67efd886d86e": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.018882724,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@dd4aec3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4dac121d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@568750b7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3e28fee1, struts.portlet.mode=[Ljava.lang.String;@16a2ed51, struts.portlet.action=[Ljava.lang.String;@3b332962}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22bcd313",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.020423026,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@50a13c2f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@610d28b8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53c99b09, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2539cd1c, struts.portlet.action=[Ljava.lang.String;@7c20cdd0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22bcd313",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6129238396893-2b41b94d-a862-42bc-82e5-4410dfbd97c9": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.016185842,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4784efd9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3fba233d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@427ae189, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@16a9eb2e, struts.portlet.mode=[Ljava.lang.String;@76332405, struts.portlet.action=[Ljava.lang.String;@187e5235}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.028426473,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@737d100a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@12e5da86, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6535117e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@707b1a44, struts.portlet.action=[Ljava.lang.String;@7132a9dc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6136487281405-e3bd6f31-47ad-4574-b844-a4c20108d6bc": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.068464876,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6c8bca63, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2364305a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@470a696f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1bc715b8, struts.portlet.mode=[Ljava.lang.String;@292d1c71, struts.portlet.action=[Ljava.lang.String;@2b491fee}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.177634355,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6c8bca63, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2364305a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@470a696f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1bc715b8, struts.portlet.mode=[Ljava.lang.String;@292d1c71, struts.portlet.action=[Ljava.lang.String;@2b491fee}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.106932374,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@30f5a68a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1e1d3956, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4f2c9ba6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4e28bdd1, struts.portlet.action=[Ljava.lang.String;@53f48368}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7a7471ce, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@28276e50, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@62e70ea3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3efe7086, struts.portlet.action=[Ljava.lang.String;@675d8c96}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.062935361,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@30f5a68a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1e1d3956, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4f2c9ba6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4e28bdd1, struts.portlet.action=[Ljava.lang.String;@53f48368}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7a7471ce, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@28276e50, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@62e70ea3, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3efe7086, struts.portlet.action=[Ljava.lang.String;@675d8c96}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6147099472913-be45345f-71ac-4efd-834e-6d5ed16cdaaf": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.018860748,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@50194e8d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3cee53dc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@290aeb20, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@57a48985, struts.portlet.mode=[Ljava.lang.String;@1ab6718, struts.portlet.action=[Ljava.lang.String;@3910fe11}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@72fd8a3c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1f9f381d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@34780cd9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@623ebac7, struts.portlet.mode=[Ljava.lang.String;@7c8c70d6, struts.portlet.action=[Ljava.lang.String;@1ab5f08a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.076445193,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@50194e8d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3cee53dc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@290aeb20, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@57a48985, struts.portlet.mode=[Ljava.lang.String;@1ab6718, struts.portlet.action=[Ljava.lang.String;@3910fe11}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@72fd8a3c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1f9f381d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@34780cd9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@623ebac7, struts.portlet.mode=[Ljava.lang.String;@7c8c70d6, struts.portlet.action=[Ljava.lang.String;@1ab5f08a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.021735155,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@301aa982, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5fc930f0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3701e6e4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@c6634d, struts.portlet.action=[Ljava.lang.String;@65f58c6e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@250a500b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@75d982d3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4f89331f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@618ff5c2, struts.portlet.action=[Ljava.lang.String;@16727bf0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.018221747,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@301aa982, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5fc930f0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3701e6e4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@c6634d, struts.portlet.action=[Ljava.lang.String;@65f58c6e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@250a500b, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@75d982d3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4f89331f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@618ff5c2, struts.portlet.action=[Ljava.lang.String;@16727bf0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6151807498905-bcee06c8-41b3-4c0c-9052-88adc51a6908": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.028803072,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@b016b4e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@29629fbb, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@681adc8f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3506d826, struts.portlet.action=[Ljava.lang.String;@35dd9ed3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22126b0e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.108813274,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7a231dfd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@30814f43, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1fde4f40, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7d0cc890, struts.portlet.mode=[Ljava.lang.String;@49293b43, struts.portlet.action=[Ljava.lang.String;@5ff60a8c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$22126b0e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6162232513944-db205895-5478-4b4c-947e-14f191b93f42": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.021579454,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6b2e46af, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@60325987, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f37f1f9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3374b5bc, struts.portlet.mode=[Ljava.lang.String;@2af69643, struts.portlet.action=[Ljava.lang.String;@587a1cfb}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$625cc462",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.019072348,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@561b61ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@654c7d2d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@26cb5207, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@15400fff, struts.portlet.action=[Ljava.lang.String;@18d910b3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$625cc462",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6165805646342-695507c4-e3d9-45fe-a1ae-ab2d77415048": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.029224273,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@75a118e6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1d540566, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6014a9ba, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@acdcf71, struts.portlet.mode=[Ljava.lang.String;@77d680e6, struts.portlet.action=[Ljava.lang.String;@4a14c44f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bdb22217",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.033533984,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41522537, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@e9dc4d0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@670d4d38, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@131ff6fa, struts.portlet.action=[Ljava.lang.String;@43b40233}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bdb22217",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6173078603260-42c9603c-a549-4234-8767-33b49f7c9daf": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.137898641,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5411dd90, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@50194e8d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3cee53dc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6972c30a, struts.portlet.mode=[Ljava.lang.String;@57a48985, struts.portlet.action=[Ljava.lang.String;@1ab6718}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.039057996,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7ae9a33a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@301aa982, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5fc930f0, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3701e6e4, struts.portlet.action=[Ljava.lang.String;@c6634d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6179803514608-f6a210c1-65f7-4208-a056-78525efdee8e": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.029051571,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@16a9a4f1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1f1cae23, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7c455e96, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@985696, struts.portlet.mode=[Ljava.lang.String;@5bcde458, struts.portlet.action=[Ljava.lang.String;@215a34b4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4a9709cd",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.033908783,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2787de58, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@659a2455, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@267517e4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4455f57d, struts.portlet.action=[Ljava.lang.String;@29fc1a2b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4a9709cd",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6193753439398-3d1899f2-2797-46e4-8412-af62b76823a9": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.01640244,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@14b789f6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6eb17ec8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@730f9695, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@277bf091, struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6cbe68e9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6f5e16cf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@750a04ec, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49e2b3c5, struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.020371049,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@14b789f6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6eb17ec8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@730f9695, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@277bf091, struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6cbe68e9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6f5e16cf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@750a04ec, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49e2b3c5, struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.019389047,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3dffc764, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b6e1c0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@561b61ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@654c7d2d, struts.portlet.action=[Ljava.lang.String;@26cb5207}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@10e5bf9c, struts.portlet.action=[Ljava.lang.String;@68c9e023}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.016983741,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3dffc764, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b6e1c0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@561b61ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@654c7d2d, struts.portlet.action=[Ljava.lang.String;@26cb5207}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@10e5bf9c, struts.portlet.action=[Ljava.lang.String;@68c9e023}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6199237409339-cef1605c-d04f-4262-ad51-6718a3e4a7c6": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.017317942,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@14b789f6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6eb17ec8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@730f9695, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@277bf091, struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6cbe68e9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6f5e16cf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@750a04ec, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49e2b3c5, struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.027697166,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@14b789f6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6eb17ec8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@730f9695, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@277bf091, struts.portlet.mode=[Ljava.lang.String;@fab35b1, struts.portlet.action=[Ljava.lang.String;@6a094db2}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@6cbe68e9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6f5e16cf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@750a04ec, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49e2b3c5, struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.021766852,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3dffc764, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b6e1c0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@561b61ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@654c7d2d, struts.portlet.action=[Ljava.lang.String;@26cb5207}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@10e5bf9c, struts.portlet.action=[Ljava.lang.String;@68c9e023}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.015779438,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3dffc764, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b6e1c0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@561b61ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@654c7d2d, struts.portlet.action=[Ljava.lang.String;@26cb5207}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@10e5bf9c, struts.portlet.action=[Ljava.lang.String;@68c9e023}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$49ab39e8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6204242112163-b83beca9-b20b-4fa9-9c09-4c6a131c0899": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.019947648,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6dfa915a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@78054f54, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@cb7fa71, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3dffc764, struts.portlet.action=[Ljava.lang.String;@4b6e1c0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2ac5702",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.020518549,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@767191b1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@34d52ecd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5d21202d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@14b789f6, struts.portlet.mode=[Ljava.lang.String;@6eb17ec8, struts.portlet.action=[Ljava.lang.String;@730f9695}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2ac5702",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6207663925551-2883f195-cde0-4491-9eb6-26aa0ba56198": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.017921043,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1b7cae6f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@21f8e55f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d5ce97f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7048535f, struts.portlet.mode=[Ljava.lang.String;@e3994ef, struts.portlet.action=[Ljava.lang.String;@680d4a6a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.074036577,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4d2a1da3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@252f626c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@33f98231, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@7186333e, struts.portlet.action=[Ljava.lang.String;@692fd26}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c256e19",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6212434506325-0a067ddd-0c3f-40c9-8782-795b72de4f57": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.026016462,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@58a63629, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7de843ef, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2e1af49b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3fd2322d, struts.portlet.mode=[Ljava.lang.String;@56ac5c80, struts.portlet.action=[Ljava.lang.String;@69e49a81}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ab440c95",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.07153017,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6fd77352, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5109e8cf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3f672204, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2f2d52ef, struts.portlet.action=[Ljava.lang.String;@f2ce6b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ab440c95",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6215863335068-3740a74b-96cf-42b2-899c-173d13f84099": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.12218189,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3e5499cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@67ab1c47, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b78a709, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4b672daa, struts.portlet.mode=[Ljava.lang.String;@ea9b7c6, struts.portlet.action=[Ljava.lang.String;@e077866}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.065840856,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@f0e995e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4c37b5b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@73db4768, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@71b3bc45, struts.portlet.action=[Ljava.lang.String;@a8c1f44}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6219529072246-6945a9cb-a0c3-4fcb-90f2-658631c1d10a": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.116724477,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@201b6b6f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@75459c75, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@183e8023, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@22b53226, struts.portlet.mode=[Ljava.lang.String;@1fcb4808, struts.portlet.action=[Ljava.lang.String;@726e5805}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2613c7b1",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.0844634,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3a62c01e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7a8fa663, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5ce33a58, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@78a287ed, struts.portlet.action=[Ljava.lang.String;@546ccad7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$2613c7b1",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6226806183887-d155b64c-bc44-43c4-8a8f-7580a1103fe9": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.018992745,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2a235b8e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@76536c53, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@38d08cb5, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@363c32cc, struts.portlet.mode=[Ljava.lang.String;@6f3f0ae, struts.portlet.action=[Ljava.lang.String;@6baf25d7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$97f0521e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.023209354,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2dbc408c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@991cbde, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78d71df1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@456bcb74, struts.portlet.action=[Ljava.lang.String;@a9c5b75}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$97f0521e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6240850860951-31273eed-662c-427a-9dfd-f728412a025a": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.017041839,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3c5dbdf8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@352c44a8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7aac8884, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@a66e580, struts.portlet.mode=[Ljava.lang.String;@5b852b49, struts.portlet.action=[Ljava.lang.String;@cdb2d95}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1739de0",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.048382412,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@35d5ac51, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@b606cb6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2a3194c6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2819c460, struts.portlet.action=[Ljava.lang.String;@30364216}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1739de0",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6258528990209-92c8b461-d63c-4e33-83b9-03aa04488e17": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.026830861,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@c827db, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@377c68c6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@538cd0f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@238ad8c, struts.portlet.mode=[Ljava.lang.String;@430fa4ef, struts.portlet.action=[Ljava.lang.String;@1761de10}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@17fede14, struts.portlet.mode=[Ljava.lang.String;@712ac7e6, struts.portlet.action=[Ljava.lang.String;@86d6bf7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b78b2f9d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.025074658,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@c827db, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@377c68c6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@538cd0f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@238ad8c, struts.portlet.mode=[Ljava.lang.String;@430fa4ef, struts.portlet.action=[Ljava.lang.String;@1761de10}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1e7f19b4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@235b4cb8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4346808, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@17fede14, struts.portlet.mode=[Ljava.lang.String;@712ac7e6, struts.portlet.action=[Ljava.lang.String;@86d6bf7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b78b2f9d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.022993052,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5767b2af, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7b22ec89, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@790132f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2228db21, struts.portlet.action=[Ljava.lang.String;@48b0e701}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5b5b59, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1934ad7c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b27b210, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b78b2f9d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.041525295,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5767b2af, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7b22ec89, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@790132f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2228db21, struts.portlet.action=[Ljava.lang.String;@48b0e701}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5b5b59, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1934ad7c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b27b210, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@69aa7d76, struts.portlet.action=[Ljava.lang.String;@33f17289}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b78b2f9d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6261954318614-a91b67e5-fd34-4997-8ef5-53de4ee05923": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.025186058,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@73d6d0c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@e36bb2a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3961a41a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5a4ed68f, struts.portlet.mode=[Ljava.lang.String;@367795c7, struts.portlet.action=[Ljava.lang.String;@d2387c8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$577a3d0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.03955829,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7882c44a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@32639b12, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@20d11153, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3887cf88, struts.portlet.action=[Ljava.lang.String;@5649ec46}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$577a3d0b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6266277630431-4dcf68d9-f386-44d6-8a60-50bf49a6f098": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.04828251,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@9ec531, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@40147317, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@210f0cc1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@19542407, struts.portlet.mode=[Ljava.lang.String;@6f95cd51, struts.portlet.action=[Ljava.lang.String;@c7a977f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c8aecc2",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.08359569,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6c8a68c1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@56193c7d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@28c88600, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@5f8890c2, struts.portlet.action=[Ljava.lang.String;@607b2792}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8c8aecc2",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6269745803480-fa51fc9a-9eab-4bf3-ae80-efbb2319357e": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.017938741,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbc408c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@991cbde, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78d71df1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@456bcb74, struts.portlet.mode=[Ljava.lang.String;@a9c5b75, struts.portlet.action=[Ljava.lang.String;@dd4aec3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$85798d46",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.017080339,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@76536c53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@38d08cb5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@363c32cc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f3f0ae, struts.portlet.action=[Ljava.lang.String;@6baf25d7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$85798d46",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6275074286393-5b553b17-da8a-473b-8866-727f8931a369": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.022452751,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbc408c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@991cbde, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78d71df1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@456bcb74, struts.portlet.mode=[Ljava.lang.String;@a9c5b75, struts.portlet.action=[Ljava.lang.String;@dd4aec3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$85798d46",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.018557441,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@76536c53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@38d08cb5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@363c32cc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f3f0ae, struts.portlet.action=[Ljava.lang.String;@6baf25d7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$85798d46",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6285607635679-f39ce131-1348-4e7f-ab12-74cf888a568e": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.104165232,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1473b8c0, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5b5c0057, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@749f539e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@37095ded, struts.portlet.mode=[Ljava.lang.String;@2eb79cbe, struts.portlet.action=[Ljava.lang.String;@2ca6546f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$400a4109",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.038538986,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5cf87cfd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@76075d65, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3a4ba480, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@27b71f50, struts.portlet.action=[Ljava.lang.String;@383790cf}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$400a4109",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6299743361699-0150b3d9-b275-48c4-908e-c76d51ad38f5": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.083255984,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbe250d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@553f1d75, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6e1d8f9e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3e34ace1, struts.portlet.mode=[Ljava.lang.String;@62fe6067, struts.portlet.action=[Ljava.lang.String;@4f071df8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@180e6ac4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@42b64ab8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7e985ce9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2a39fe6a, struts.portlet.mode=[Ljava.lang.String;@410ae9a3, struts.portlet.action=[Ljava.lang.String;@319988b0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b9ac762",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.06371814,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbe250d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@553f1d75, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6e1d8f9e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@3e34ace1, struts.portlet.mode=[Ljava.lang.String;@62fe6067, struts.portlet.action=[Ljava.lang.String;@4f071df8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@180e6ac4, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@42b64ab8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7e985ce9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2a39fe6a, struts.portlet.mode=[Ljava.lang.String;@410ae9a3, struts.portlet.action=[Ljava.lang.String;@319988b0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b9ac762",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.082182781,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@ea9b7c6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@e077866, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@ed3068a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@30d4b288, struts.portlet.action=[Ljava.lang.String;@4cc6fa2a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7adf16aa, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@34a1d21f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@58bf8650, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@73c60324, struts.portlet.action=[Ljava.lang.String;@71ae31b0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b9ac762",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.166124866,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@ea9b7c6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@e077866, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@ed3068a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@30d4b288, struts.portlet.action=[Ljava.lang.String;@4cc6fa2a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7adf16aa, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@34a1d21f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@58bf8650, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@73c60324, struts.portlet.action=[Ljava.lang.String;@71ae31b0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$b9ac762",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6303706482414-a47b7e84-b162-4da4-9523-feac09395fa2": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.159761651,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2a3c96e3, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@15cafec7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b444398, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@7c2b6087, struts.portlet.action=[Ljava.lang.String;@3fffff43}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$265a0279",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6314169786283-1faeb436-41ee-412e-816b-d7df7c2469ce": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.039369686,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5b6e8f77, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@41a6d121, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4f449e8f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@411291e5, struts.portlet.mode=[Ljava.lang.String;@6e28bb87, struts.portlet.action=[Ljava.lang.String;@19f040ba}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.029169663,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5ffc5491, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@705202d1, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3c443976, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3e58d65e, struts.portlet.action=[Ljava.lang.String;@3bd55d8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$64351c25",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6318432083342-2508487d-b62a-42ad-8403-1049a7ffa6a7": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.021908848,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1e6b9a95, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4d6f623d, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@aa21042, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@e93f3d5, struts.portlet.mode=[Ljava.lang.String;@4cee7fa0, struts.portlet.action=[Ljava.lang.String;@7a26928a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$86da5dcb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.023694851,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@26a529dc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@265c5d69, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1286528d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3cc20577, struts.portlet.action=[Ljava.lang.String;@33a630fa}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$86da5dcb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6322736686360-533409e6-a0e8-4bec-8c94-9ee9e8ff1a0f": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.025424055,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@26a529dc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@265c5d69, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1286528d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3cc20577, struts.portlet.action=[Ljava.lang.String;@33a630fa}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$86da5dcb",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6337043584196-80ec4881-9e3e-4d20-9f9d-d6ea32a3a9a8": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.018574739,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2dbc408c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@991cbde, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78d71df1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@456bcb74, struts.portlet.mode=[Ljava.lang.String;@a9c5b75, struts.portlet.action=[Ljava.lang.String;@dd4aec3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8bf9a7b8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.017498037,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@76536c53, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@38d08cb5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@363c32cc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f3f0ae, struts.portlet.action=[Ljava.lang.String;@6baf25d7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$8bf9a7b8",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6344112559151-36915073-6a06-45c1-82f0-f118b0f3ec90": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.074332958,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2bef51f2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@650eab8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@30f5a68a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1e1d3956, struts.portlet.mode=[Ljava.lang.String;@4f2c9ba6, struts.portlet.action=[Ljava.lang.String;@4e28bdd1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@10e5bf9c, struts.portlet.mode=[Ljava.lang.String;@68c9e023, struts.portlet.action=[Ljava.lang.String;@1624775}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016268435,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2bef51f2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@650eab8, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@30f5a68a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@1e1d3956, struts.portlet.mode=[Ljava.lang.String;@4f2c9ba6, struts.portlet.action=[Ljava.lang.String;@4e28bdd1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@161dd92a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@77c3c037, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@252744a1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@10e5bf9c, struts.portlet.mode=[Ljava.lang.String;@68c9e023, struts.portlet.action=[Ljava.lang.String;@1624775}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.022491148,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3e5499cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@67ab1c47, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b78a709, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4b672daa, struts.portlet.action=[Ljava.lang.String;@ea9b7c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6f5e16cf, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@750a04ec, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@49e2b3c5, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.165052251,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3e5499cc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@67ab1c47, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b78a709, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4b672daa, struts.portlet.action=[Ljava.lang.String;@ea9b7c6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@6f5e16cf, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@750a04ec, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@49e2b3c5, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@56846330, struts.portlet.action=[Ljava.lang.String;@49f3ff41}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$4999834d",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6347987501868-cb81d48d-b398-471f-95da-e18444965d82": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.150217018,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@75390459, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@7756c3cd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2313052e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@45efc20d, struts.portlet.action=[Ljava.lang.String;@3e5499cc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6355065617212-6a2e1175-504c-41bb-a330-3ceac8edc188": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.114545741,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7b8233cd, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4b20ca2b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1cbf6e72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4504d271, struts.portlet.mode=[Ljava.lang.String;@207b8649, struts.portlet.action=[Ljava.lang.String;@65b3a85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.06658874,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@41925502, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@13e3c1c7, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5316e95f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6358870536811-92645611-68ae-4825-a43f-304ce8607431": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.044428293,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@35d3ab60, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@10876a6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@71870da7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6dd91637, struts.portlet.mode=[Ljava.lang.String;@45792847, struts.portlet.action=[Ljava.lang.String;@706cb08}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.048398402,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5b022357, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6f8e0cee, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@614aeccc, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6c37bd27, struts.portlet.action=[Ljava.lang.String;@25d3cfc8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$18656d3e",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6363302057597-f399af04-8731-4642-9b1c-7ba3085d52e9": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.030501863,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@49601f82, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@23e44287, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2b8d084, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6daf2337, struts.portlet.mode=[Ljava.lang.String;@24fabd0f, struts.portlet.action=[Ljava.lang.String;@250b236d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$92f876cd",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.045538195,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4bee18dc, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@44f3fe83, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@44c5a16f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@4c98a6d5, struts.portlet.action=[Ljava.lang.String;@392a04e7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$92f876cd",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6366966765952-3af4e446-23f4-495b-afc3-1c5e3b169f82": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.096393301,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@12bfd80d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@41925502, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@13e3c1c7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5316e95f, struts.portlet.mode=[Ljava.lang.String;@3f053c80, struts.portlet.action=[Ljava.lang.String;@6c6c5427}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.140733193,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@60641ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@75f65e45, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eeade6c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@328cf0e1, struts.portlet.action=[Ljava.lang.String;@63b1d4fa}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e412646a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6370470658651-f2f0e32d-5f30-47a3-a09f-ac48674aa1ab": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.064057334,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@553f1d75, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6e1d8f9e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3e34ace1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@62fe6067, struts.portlet.mode=[Ljava.lang.String;@4f071df8, struts.portlet.action=[Ljava.lang.String;@4de41af9}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ebc32e20",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.155968725,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@726e5805, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@40c80397, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4b672daa, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2fea7088, struts.portlet.action=[Ljava.lang.String;@40499e4f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$ebc32e20",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6387894442053-6f90bdca-185e-45e7-bd2a-025645334ca2": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.022909347,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3e33d73e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6981f8f3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@623dcf2a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2eae4349, struts.portlet.mode=[Ljava.lang.String;@e84fb85, struts.portlet.action=[Ljava.lang.String;@68a4dcc6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@fc807c1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@296e281a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@59cda16e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5dd903be, struts.portlet.mode=[Ljava.lang.String;@12e0f1cb, struts.portlet.action=[Ljava.lang.String;@4a163575}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f9d8f633",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.031048764,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3e33d73e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6981f8f3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@623dcf2a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2eae4349, struts.portlet.mode=[Ljava.lang.String;@e84fb85, struts.portlet.action=[Ljava.lang.String;@68a4dcc6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@fc807c1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@296e281a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@59cda16e, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5dd903be, struts.portlet.mode=[Ljava.lang.String;@12e0f1cb, struts.portlet.action=[Ljava.lang.String;@4a163575}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f9d8f633",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.062644729,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@761e788f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6a472566, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1907874b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@5e65afb6, struts.portlet.action=[Ljava.lang.String;@5b3a7ef5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@671d1157, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@60c8a093, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@44cffc25, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2a369e14, struts.portlet.action=[Ljava.lang.String;@25aeb5ac}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f9d8f633",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.043067588,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@761e788f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6a472566, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1907874b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@5e65afb6, struts.portlet.action=[Ljava.lang.String;@5b3a7ef5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@671d1157, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@60c8a093, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@44cffc25, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@2a369e14, struts.portlet.action=[Ljava.lang.String;@25aeb5ac}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$f9d8f633",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6393006978327-21be2da7-f0a6-47f6-b0b6-9fc4b556a79a": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.063399429,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@78d6447a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@7a729f84, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1e469dfd, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@554f0dfb, struts.portlet.action=[Ljava.lang.String;@1f7076bc}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$eb50211b",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6398207922540-8ba05bfa-520c-422a-b229-b7ac72e3494f": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.016274834,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@71a06021, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@80bfdc6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6edcad64, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4c6007fb, struts.portlet.mode=[Ljava.lang.String;@3e33d73e, struts.portlet.action=[Ljava.lang.String;@6981f8f3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@10f7c76, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4745e9c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f2bff16, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@75de29c0, struts.portlet.mode=[Ljava.lang.String;@fc807c1, struts.portlet.action=[Ljava.lang.String;@296e281a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7a3872c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.060959124,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@554f0dfb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1f7076bc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@71904469, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@5b9396d3, struts.portlet.action=[Ljava.lang.String;@761e788f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@17fa1336, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4228bf58, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@68b9834c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@20b9d5d5, struts.portlet.action=[Ljava.lang.String;@671d1157}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7a3872c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.016084833,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@554f0dfb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1f7076bc, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@71904469, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@5b9396d3, struts.portlet.action=[Ljava.lang.String;@761e788f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@17fa1336, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4228bf58, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@68b9834c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@20b9d5d5, struts.portlet.action=[Ljava.lang.String;@671d1157}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7a3872c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016627634,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@71a06021, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@80bfdc6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6edcad64, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4c6007fb, struts.portlet.mode=[Ljava.lang.String;@3e33d73e, struts.portlet.action=[Ljava.lang.String;@6981f8f3}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@10f7c76, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4745e9c, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f2bff16, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@75de29c0, struts.portlet.mode=[Ljava.lang.String;@fc807c1, struts.portlet.action=[Ljava.lang.String;@296e281a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7a3872c",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6401803656953-fe6af7d8-7607-43af-a3e0-5e1e7e60ecf7": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.016391233,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5b3a7ef5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@8851ce1, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2d9dff65, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5ef6fd7f, struts.portlet.mode=[Ljava.lang.String;@5633ed82, struts.portlet.action=[Ljava.lang.String;@767191b1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@77d4ac52, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@29f38091, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@161dd92a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@77c3c037, struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6821e29a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.021667944,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5b3a7ef5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@8851ce1, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2d9dff65, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5ef6fd7f, struts.portlet.mode=[Ljava.lang.String;@5633ed82, struts.portlet.action=[Ljava.lang.String;@767191b1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@77d4ac52, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@29f38091, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@161dd92a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@77c3c037, struts.portlet.mode=[Ljava.lang.String;@252744a1, struts.portlet.action=[Ljava.lang.String;@10e5bf9c}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6821e29a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.051848805,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@e57e5d6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6dfa915a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78054f54, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@cb7fa71, struts.portlet.action=[Ljava.lang.String;@3dffc764}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@66fb45e5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6cbe68e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6f5e16cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@750a04ec, struts.portlet.action=[Ljava.lang.String;@49e2b3c5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6821e29a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.015886132,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@e57e5d6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@6dfa915a, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@78054f54, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@cb7fa71, struts.portlet.action=[Ljava.lang.String;@3dffc764}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@66fb45e5, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@6cbe68e9, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6f5e16cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@750a04ec, struts.portlet.action=[Ljava.lang.String;@49e2b3c5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$6821e29a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6407218314329-d0b4267c-5e64-4f9c-96fe-c3e579146a96": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.016375933,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5e65afb6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5b3a7ef5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@8851ce1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2d9dff65, struts.portlet.mode=[Ljava.lang.String;@5ef6fd7f, struts.portlet.action=[Ljava.lang.String;@5633ed82}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@21c747a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77d4ac52, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@29f38091, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@161dd92a, struts.portlet.mode=[Ljava.lang.String;@77c3c037, struts.portlet.action=[Ljava.lang.String;@252744a1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$15512896",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.037293175,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5e65afb6, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5b3a7ef5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@8851ce1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@2d9dff65, struts.portlet.mode=[Ljava.lang.String;@5ef6fd7f, struts.portlet.action=[Ljava.lang.String;@5633ed82}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@21c747a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@77d4ac52, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@29f38091, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@161dd92a, struts.portlet.mode=[Ljava.lang.String;@77c3c037, struts.portlet.action=[Ljava.lang.String;@252744a1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$15512896",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.055078312,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@55e42449, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@e57e5d6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6dfa915a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@78054f54, struts.portlet.action=[Ljava.lang.String;@cb7fa71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@e829999, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@66fb45e5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6cbe68e9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f5e16cf, struts.portlet.action=[Ljava.lang.String;@750a04ec}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$15512896",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.016352133,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@55e42449, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@e57e5d6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6dfa915a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@78054f54, struts.portlet.action=[Ljava.lang.String;@cb7fa71}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@e829999, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@66fb45e5, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6cbe68e9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f5e16cf, struts.portlet.action=[Ljava.lang.String;@750a04ec}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$15512896",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6410887110841-c11b2d6f-7925-4137-9b1c-3f5818e3aebd": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.128122558,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7e928e2f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@f667fe, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@788fcafb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@53812a9b, struts.portlet.mode=[Ljava.lang.String;@14b030a0, struts.portlet.action=[Ljava.lang.String;@41e350f1}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd246562",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.101361204,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4e28bdd1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@53f48368, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@24d4d7c9, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@f0e995e, struts.portlet.action=[Ljava.lang.String;@4c37b5b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$dd246562",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6414422084664-adedb3f3-ba59-429d-98cc-e91e73569d48": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.049413799,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@546ccad7, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5357c287, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1623134f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7a527389, struts.portlet.mode=[Ljava.lang.String;@485a3466, struts.portlet.action=[Ljava.lang.String;@25748410}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5b40de43, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@49fb0bbd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5489b1f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4faf104, struts.portlet.mode=[Ljava.lang.String;@5995851e, struts.portlet.action=[Ljava.lang.String;@48a2db72}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c9800399",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.021244843,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@546ccad7, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5357c287, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1623134f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@7a527389, struts.portlet.mode=[Ljava.lang.String;@485a3466, struts.portlet.action=[Ljava.lang.String;@25748410}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5b40de43, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@49fb0bbd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5489b1f7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4faf104, struts.portlet.mode=[Ljava.lang.String;@5995851e, struts.portlet.action=[Ljava.lang.String;@48a2db72}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c9800399",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.019172538,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@19ae6bb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@10993713, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@58359ebd, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@7446d8d5, struts.portlet.action=[Ljava.lang.String;@5c3b6c6e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5fcd1c5f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3cc30dee, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7d528cf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6dee8ae6, struts.portlet.action=[Ljava.lang.String;@5af64ce0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c9800399",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.12932846,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@19ae6bb, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@10993713, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@58359ebd, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@7446d8d5, struts.portlet.action=[Ljava.lang.String;@5c3b6c6e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5fcd1c5f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@3cc30dee, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7d528cf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6dee8ae6, struts.portlet.action=[Ljava.lang.String;@5af64ce0}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c9800399",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6418159481774-ed1fb1fa-39c9-4a39-8aa0-5ce28e7bec82": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.111860225,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2b5825fa, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@53d1b9b3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2cae1042, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@24b6b8f6, struts.portlet.action=[Ljava.lang.String;@72cf2de5}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$37db1a3a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.06992584,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@11eadcba, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@4721d212, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1b065145, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@45cff11c, struts.portlet.mode=[Ljava.lang.String;@207ea13, struts.portlet.action=[Ljava.lang.String;@4bff1903}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$37db1a3a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6423640744851-d78fa486-27a4-45f6-8cff-0affd9dea419": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.05450721,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5ce33a58, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@78a287ed, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@546ccad7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5357c287, struts.portlet.mode=[Ljava.lang.String;@1623134f, struts.portlet.action=[Ljava.lang.String;@7a527389}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@49ca94a9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@9ab310b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b40de43, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49fb0bbd, struts.portlet.mode=[Ljava.lang.String;@5489b1f7, struts.portlet.action=[Ljava.lang.String;@4faf104}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.116794534,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@129b4fe2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5af3a0f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@19ae6bb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f8f9349, struts.portlet.action=[Ljava.lang.String;@75c9e76b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024646049,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5ce33a58, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@78a287ed, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@546ccad7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5357c287, struts.portlet.mode=[Ljava.lang.String;@1623134f, struts.portlet.action=[Ljava.lang.String;@7a527389}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@49ca94a9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@9ab310b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b40de43, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49fb0bbd, struts.portlet.mode=[Ljava.lang.String;@5489b1f7, struts.portlet.action=[Ljava.lang.String;@4faf104}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6429046906536-30125421-b9d6-49d7-b659-18d517b0b4dd": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.042198984,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5ce33a58, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@78a287ed, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@546ccad7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5357c287, struts.portlet.mode=[Ljava.lang.String;@1623134f, struts.portlet.action=[Ljava.lang.String;@7a527389}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@49ca94a9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@9ab310b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b40de43, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49fb0bbd, struts.portlet.mode=[Ljava.lang.String;@5489b1f7, struts.portlet.action=[Ljava.lang.String;@4faf104}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016715133,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@5ce33a58, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@78a287ed, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@546ccad7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@5357c287, struts.portlet.mode=[Ljava.lang.String;@1623134f, struts.portlet.action=[Ljava.lang.String;@7a527389}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@49ca94a9, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@9ab310b, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5b40de43, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@49fb0bbd, struts.portlet.mode=[Ljava.lang.String;@5489b1f7, struts.portlet.action=[Ljava.lang.String;@4faf104}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.016859334,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@129b4fe2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5af3a0f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@19ae6bb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f8f9349, struts.portlet.action=[Ljava.lang.String;@75c9e76b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@52226e57, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1200458e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5fcd1c5f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3cc30dee, struts.portlet.action=[Ljava.lang.String;@7d528cf7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.143045785,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@129b4fe2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@5af3a0f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@19ae6bb, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6f8f9349, struts.portlet.action=[Ljava.lang.String;@75c9e76b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@52226e57, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1200458e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5fcd1c5f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3cc30dee, struts.portlet.action=[Ljava.lang.String;@7d528cf7}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$bd376c07",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6436066233776-75b5de48-3e6b-4499-bbe7-d6133c081fe3": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.102340403,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@7ce9e05a, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4992613f, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6fd5717c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@889d9e8, struts.portlet.mode=[Ljava.lang.String;@5246a3b3, struts.portlet.action=[Ljava.lang.String;@ba354ca}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.052698204,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@301aa982, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5fc930f0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3701e6e4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@c6634d, struts.portlet.action=[Ljava.lang.String;@65f58c6e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$be605966",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6439570599609-a50453d1-a31c-41c7-b6bb-17bba2b91d3e": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.022482444,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@57a2ed35, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@12ffd1de, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@3d278b4d, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@4096aa05, struts.portlet.mode=[Ljava.lang.String;@9d3c67, struts.portlet.action=[Ljava.lang.String;@6c806c8b}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$45b643fc",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.064660028,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3baf6936, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@285f38f6, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4e1459ea, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3ab6678b, struts.portlet.action=[Ljava.lang.String;@7a904f32}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$45b643fc",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6443897389245-c2f3d0db-b1be-4c8d-b9fe-abb2a788f465": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.024364448,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@255e5e2e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@12abdfb, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@b0e5507, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6bbe50c9, struts.portlet.mode=[Ljava.lang.String;@3c46dcbe, struts.portlet.action=[Ljava.lang.String;@68577ba8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$805f0e04",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6447554494740-5a221a7b-e34a-44c3-af33-d2259981983c": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.021508642,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1280851e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5e840abf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@56de6d6b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@57b9e423, struts.portlet.mode=[Ljava.lang.String;@304a3655, struts.portlet.action=[Ljava.lang.String;@368d5c00}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3015db78, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@515ebef3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@545607f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@39109136, struts.portlet.mode=[Ljava.lang.String;@27c04377, struts.portlet.action=[Ljava.lang.String;@34dc85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7c69897",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.076861652,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1280851e, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5e840abf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@56de6d6b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@57b9e423, struts.portlet.mode=[Ljava.lang.String;@304a3655, struts.portlet.action=[Ljava.lang.String;@368d5c00}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@3015db78, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@515ebef3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@545607f2, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@39109136, struts.portlet.mode=[Ljava.lang.String;@27c04377, struts.portlet.action=[Ljava.lang.String;@34dc85a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7c69897",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.041560981,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3a4ba480, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@27b71f50, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@383790cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74971ed9, struts.portlet.action=[Ljava.lang.String;@131fcb6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@c81fd12, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@62e6a3ec, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5754de72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@31ee96f4, struts.portlet.action=[Ljava.lang.String;@320494b6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7c69897",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.03013486,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@3a4ba480, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@27b71f50, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@383790cf, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74971ed9, struts.portlet.action=[Ljava.lang.String;@131fcb6f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@c81fd12, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@62e6a3ec, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@5754de72, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@31ee96f4, struts.portlet.action=[Ljava.lang.String;@320494b6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$e7c69897",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6451857000080-ceb52f31-a78e-4357-9c5f-43ff1a8e4731": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.019757439,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4650a407, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@30135202, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6a4d7f76, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b558294, struts.portlet.mode=[Ljava.lang.String;@bb095, struts.portlet.action=[Ljava.lang.String;@777c350f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1704f67f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@e4d2696, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6e0f7aad, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@15fb7a32, struts.portlet.mode=[Ljava.lang.String;@257cc1fc, struts.portlet.action=[Ljava.lang.String;@42e22a53}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.039716078,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7dd00705, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@f14e5bf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d176a31, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a91d146, struts.portlet.action=[Ljava.lang.String;@4784013e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5bcde458, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@215a34b4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77bd7fe7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@35d3ab60, struts.portlet.action=[Ljava.lang.String;@10876a6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.028271656,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7dd00705, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@f14e5bf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d176a31, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a91d146, struts.portlet.action=[Ljava.lang.String;@4784013e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5bcde458, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@215a34b4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77bd7fe7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@35d3ab60, struts.portlet.action=[Ljava.lang.String;@10876a6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.085033667,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4650a407, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@30135202, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6a4d7f76, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b558294, struts.portlet.mode=[Ljava.lang.String;@bb095, struts.portlet.action=[Ljava.lang.String;@777c350f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@1704f67f, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@e4d2696, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6e0f7aad, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@15fb7a32, struts.portlet.mode=[Ljava.lang.String;@257cc1fc, struts.portlet.action=[Ljava.lang.String;@42e22a53}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6456348111064-01acda72-3222-42fb-ba16-765e20c1a210": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.038364974,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@4b2a30d, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@322803db, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@56ba8773, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@6ceb7b5e, struts.portlet.action=[Ljava.lang.String;@7dd00705}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c691ab86",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.074379045,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@2687f956, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@1ded7b14, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@29be7749, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@6a969fb8, struts.portlet.mode=[Ljava.lang.String;@7a18e8d, struts.portlet.action=[Ljava.lang.String;@3028e50e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$c691ab86",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6461159084243-109020b4-903e-4513-aabf-0ff9a9f6f089": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.058455514,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7dd00705, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@f14e5bf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d176a31, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a91d146, struts.portlet.action=[Ljava.lang.String;@4784013e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5bcde458, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@215a34b4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77bd7fe7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@35d3ab60, struts.portlet.action=[Ljava.lang.String;@10876a6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.060656518,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@7dd00705, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@f14e5bf, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@d176a31, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a91d146, struts.portlet.action=[Ljava.lang.String;@4784013e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@5bcde458, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@215a34b4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@77bd7fe7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@35d3ab60, struts.portlet.action=[Ljava.lang.String;@10876a6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.104618104,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@4650a407, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@30135202, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6a4d7f76, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@b558294, struts.portlet.mode=[Ljava.lang.String;@bb095, struts.portlet.action=[Ljava.lang.String;@777c350f}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$7564c30a",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6464863372842-c50f8cae-65b6-494d-acd0-300ce1fe1802": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.155337402,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@328cf0e1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@63b1d4fa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@42e3ede4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@75e91545, struts.portlet.mode=[Ljava.lang.String;@60d1a32f, struts.portlet.action=[Ljava.lang.String;@531c311e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@618ff5c2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@16727bf0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f84acf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@291373d3, struts.portlet.mode=[Ljava.lang.String;@372ca2d6, struts.portlet.action=[Ljava.lang.String;@3204e238}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$3a3db4d5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.032401163,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@328cf0e1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@63b1d4fa, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@42e3ede4, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@75e91545, struts.portlet.mode=[Ljava.lang.String;@60d1a32f, struts.portlet.action=[Ljava.lang.String;@531c311e}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@618ff5c2, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@16727bf0, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2f84acf7, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@291373d3, struts.portlet.mode=[Ljava.lang.String;@372ca2d6, struts.portlet.action=[Ljava.lang.String;@3204e238}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$3a3db4d5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.026975952,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a62c01e, struts.portlet.action=[Ljava.lang.String;@7a8fa663}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1981d861, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@118ffcfd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53f4c1e6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74174a23, struts.portlet.action=[Ljava.lang.String;@6342d610}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$3a3db4d5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.107475009,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@150ab4ed, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@3c435123, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@50fe837a, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3a62c01e, struts.portlet.action=[Ljava.lang.String;@7a8fa663}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@1981d861, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@118ffcfd, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@53f4c1e6, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@74174a23, struts.portlet.action=[Ljava.lang.String;@6342d610}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$3a3db4d5",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6469900616604-f61ca27e-adb3-4aea-a0ff-bfb0ec670f0d": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.193211174,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@10c626be, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@2fc0cc3, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@328cf0e1, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@56bca85b, struts.portlet.mode=[Ljava.lang.String;@75d0911a, struts.portlet.action=[Ljava.lang.String;@75e91545}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$cf7d36aa",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.023494345,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@71b3bc45, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@a8c1f44, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@150ab4ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3c435123, struts.portlet.action=[Ljava.lang.String;@50fe837a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@588f63c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5a6fa56e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1981d861, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@118ffcfd, struts.portlet.action=[Ljava.lang.String;@53f4c1e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$cf7d36aa",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.130078252,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@71b3bc45, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@a8c1f44, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@150ab4ed, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3c435123, struts.portlet.action=[Ljava.lang.String;@50fe837a}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                },
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@588f63c, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@5a6fa56e, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@1981d861, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@118ffcfd, struts.portlet.action=[Ljava.lang.String;@53f4c1e6}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$cf7d36aa",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6473687892920-306a01ce-19d6-4620-baa0-d1cf5d86a643": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
            "Time": 0.146383682,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@60641ec8, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@75f65e45, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@6eeade6c, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@328cf0e1, struts.portlet.mode=[Ljava.lang.String;@63b1d4fa, struts.portlet.action=[Ljava.lang.String;@42e3ede4}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$75304301",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 154
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
            "Time": 0.106639306,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@2ece4966, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponse@1dd0e7c4, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@7894f09b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@3d484181, struts.portlet.action=[Ljava.lang.String;@6111ba37}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$75304301",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr168DispatcherTest.java",
                    "lineNumber": 183
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ],
    "6477199870589-2944ad48-72e9-4080-804c-1bcebfdaba4c": [
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            "Time": 0.016313632,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=RENDER_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=null, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.portlet.servlet.PortletServletRequest@516592b1, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@4cffcc61, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@4373f66f, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.eventAction=true, struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.eventAction=[Ljava.lang.String;@399ca607, struts.portlet.mode=[Ljava.lang.String;@44114b9f, struts.portlet.action=[Ljava.lang.String;@76bf1bb8}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1268168",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "render",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 337
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testRender_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 88
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        },
        {
            "Name": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
            "Time": 0.017982935,
            "Result": "ERROR",
            "Exception": [
                {
                    "Name": "org.jmock.core.DynamicMockError",
                    "Message": " mockActionProxyFactory: unexpected invocation\nInvoked: mockActionProxyFactory.createActionProxy(\"\", \"testAction\", null, <{com.opensymphony.xwork2.ActionContext.locale=en_US, struts.portlet.portletNamespace=, request={}, struts.portlet.phase=ACTION_PHASE, struts.actionMapping=ActionMapping{name='testAction', namespace='', method='null', extension='action', params={}, result=null}, struts.portlet.response=mockActionResponse, struts.portlet.defaultActionForMode=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, struts.portlet.context=null, session={}, struts.portlet.modeNamespaceMap={preview=, help=, edit_defaults=, view=/view, print=, edit=, about=, config=}, com.opensymphony.xwork2.dispatcher.HttpServletRequest=org.apache.struts2.dispatcher.StrutsRequestWrapper@59939293, com.opensymphony.xwork2.dispatcher.HttpServletResponse=org.apache.struts2.portlet.servlet.PortletServletResponseJSR286@68b366e2, com.opensymphony.xwork2.dispatcher.ServletContext=org.apache.struts2.portlet.servlet.PortletServletContext@2d74c81b, com.opensymphony.xwork2.ActionContext.parameters={struts.portlet.mode=view, struts.portlet.action=/view/testAction}, com.opensymphony.xwork2.ActionContext.application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, com.opensymphony.xwork2.ActionContext.session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}, struts.portlet.modeActionMap={preview=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, help=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit_defaults=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, view=ActionMapping{name='default', namespace='/view', method='null', extension='null', params={}, result=null}, print=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, edit=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, about=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}, config=ActionMapping{name='default', namespace='', method='null', extension='null', params={}, result=null}}, struts.portlet.config=null, attr=AttributeMap {request={}, session={}, application={struts.mapper.alwaysSelectFullNamespace=true, viewNamespace=/view}}, parameters={struts.portlet.mode=[Ljava.lang.String;@10b687f2, struts.portlet.action=[Ljava.lang.String;@55f4887d}, struts.portlet.request=null}>)\nAllowed:\nexpected once: createActionProxy( eq(\"/view\"), eq(\"testAction\"), null, an instance of java.util.Map ), returns <mockActionProxy>\n\n"
                }
            ],
            "stackTrace": [
                {
                    "declaringClass": "org.jmock.core.AbstractDynamicMock",
                    "methodName": "mockInvocation",
                    "fileName": "AbstractDynamicMock.java",
                    "lineNumber": 96
                },
                {
                    "declaringClass": "org.jmock.cglib.CGLIBCoreMock",
                    "methodName": "intercept",
                    "fileName": "CGLIBCoreMock.java",
                    "lineNumber": 79
                },
                {
                    "declaringClass": "org.jmock.codegen.com.opensymphony.xwork2.ActionProxyFactory$$EnhancerByCGLIB$$1268168",
                    "methodName": "createActionProxy",
                    "fileName": "<generated>",
                    "lineNumber": -1
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "serviceAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 485
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr168Dispatcher",
                    "methodName": "processAction",
                    "fileName": "Jsr168Dispatcher.java",
                    "lineNumber": 305
                },
                {
                    "declaringClass": "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest",
                    "methodName": "testProcessAction_ok",
                    "fileName": "Jsr286DispatcherTest.java",
                    "lineNumber": 121
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke0",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": -2
                },
                {
                    "declaringClass": "sun.reflect.NativeMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "NativeMethodAccessorImpl.java",
                    "lineNumber": 62
                },
                {
                    "declaringClass": "sun.reflect.DelegatingMethodAccessorImpl",
                    "methodName": "invoke",
                    "fileName": "DelegatingMethodAccessorImpl.java",
                    "lineNumber": 43
                },
                {
                    "declaringClass": "java.lang.reflect.Method",
                    "methodName": "invoke",
                    "fileName": "Method.java",
                    "lineNumber": 498
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod$1",
                    "methodName": "runReflectiveCall",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 50
                },
                {
                    "declaringClass": "org.junit.internal.runners.model.ReflectiveCallable",
                    "methodName": "run",
                    "fileName": "ReflectiveCallable.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "org.junit.runners.model.FrameworkMethod",
                    "methodName": "invokeExplosively",
                    "fileName": "FrameworkMethod.java",
                    "lineNumber": 47
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.InvokeMethod",
                    "methodName": "evaluate",
                    "fileName": "InvokeMethod.java",
                    "lineNumber": 17
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunBefores",
                    "methodName": "evaluate",
                    "fileName": "RunBefores.java",
                    "lineNumber": 26
                },
                {
                    "declaringClass": "org.junit.internal.runners.statements.RunAfters",
                    "methodName": "evaluate",
                    "fileName": "RunAfters.java",
                    "lineNumber": 27
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "runChild",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 332
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestRunner",
                    "methodName": "run",
                    "fileName": "JUnitTestRunner.java",
                    "lineNumber": 108
                },
                {
                    "declaringClass": "org.junit.runner.JUnitCore",
                    "methodName": "run",
                    "fileName": "JUnitCore.java",
                    "lineNumber": 137
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 291
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "execute",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 327
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "executeWithJUnit4Runner",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 365
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.JUnitTestExecutor",
                    "methodName": "runOrder",
                    "fileName": "JUnitTestExecutor.java",
                    "lineNumber": 46
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "$anonfun$run$1",
                    "fileName": "Executor.scala",
                    "lineNumber": 30
                },
                {
                    "declaringClass": "scala.runtime.java8.JFunction0$mcV$sp",
                    "methodName": "apply",
                    "fileName": "JFunction0$mcV$sp.java",
                    "lineNumber": 12
                },
                {
                    "declaringClass": "scala.util.Try$",
                    "methodName": "apply",
                    "fileName": "Try.scala",
                    "lineNumber": 209
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "run",
                    "fileName": "Executor.scala",
                    "lineNumber": 28
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor$",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": 18
                },
                {
                    "declaringClass": "com.daredevil.testrunner.execution.Executor",
                    "methodName": "main",
                    "fileName": "Executor.scala",
                    "lineNumber": -1
                }
            ]
        }
    ]
}